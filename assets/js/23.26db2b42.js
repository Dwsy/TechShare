(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{538:function(t,e,v){"use strict";v.r(e);var a=v(27),_=Object(a.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"java-开发实战-高级工程师的自我修养之单元测试"}},[t._v("[Java 开发实战] 高级工程师的自我修养之单元测试")]),t._v(" "),v("h2",{attrs:{id:"为什么单元测试很重要"}},[t._v("为什么单元测试很重要？")]),t._v(" "),v("p",[t._v("为什么说判断一个程序员是中级还是高级，看看 TA 会不会写单元测试就知道了，因为写单元测试不仅是写测试代码，往往还需要重新审视产品代码本身，必要的时候需要进行重构才能继续编写测试，在编写单元测试代码的过程中时刻都能体会到高内聚、低耦合的编程思想。写单元测试，其实是为对象模型添加了一个特殊用户，这个过程也迫使我们把对象模型设计的更加易用，总的说来编写单元测试可以加深对高内聚、低耦合、面向接口编程、依赖注入、API 设计、单一职责等"),v("code",[t._v("编程思想的掌握")]),t._v("，所以单元测试是如此重要，以至于可以很好地用来判断一个工程师的技术水平，或者至少用来判断其编程思想。")]),t._v(" "),v("h2",{attrs:{id:"为什么单元测试难以实施"}},[t._v("为什么单元测试难以实施?")]),t._v(" "),v("p",[t._v("很多小企业都难以实施单元测试，主要原因有：编写单元测试需要花费不少时间、单元测试并非想象中那样容易编写、开发人员对单元测试的理解不够全面等。还有一些更糟糕的情况，比如代码本身完成度不够，CRUD 功能背后缺少数据验证、服务端业务逻辑验证，系统本身就不堪一击，若要编写单元测试，需要做大量的代码改造工作，这种情况我愿称之为单元测试领域的「"),v("code",[t._v("戴维斯双杀")]),t._v("」效应——因为代码本身完成度低，原本完善的代码应当具有一定的复杂度，但在开发时却实现的极为简单，只满足了表面的功能，开发人员认为过于简单的代码没有编写单元测试的必要，导致产品代码质量下滑、对单元测试的理解扭曲的双重负循环。")]),t._v(" "),v("p",[t._v("单元测试难以实施，总的可以归结为开发能力和产品质量文化的原因，对于想长期发展的企业来说，无疑是会注重这两个方面，因此大多数企业也在不断克服这些问题，提升工程师的能力，加强编写单元测试的质量和效率，同时还要树立正确的产品质量观念，要知道即使是付出了额外的编写单元测试的时间，总的时间成本也并不会增加，因为「"),v("code",[t._v("质量是免费的")]),t._v("」，产品质量提升了，用于排查问题、修复 bug 的时间自然变少了。")]),t._v(" "),v("p",[t._v("在企业中注入产品质量文化，提升开发人员编写单元测试的能力，只要做到这些，实施单元测试也没有想象中困难，下文就从开发实战的角度讲一讲在企业级的复杂项目中如何编写单元测试。")]),t._v(" "),v("h2",{attrs:{id:"企业级项目中的单元测试"}},[t._v("企业级项目中的单元测试")]),t._v(" "),v("p",[t._v("关于编写单元测试的一些基础知识，我在这篇 "),v("a",{attrs:{href:"https://github.com/lcomplete/TechShare/blob/master/docs/java/java%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95.pptx",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java 单元测试"),v("OutboundLink")],1),t._v(" PPT 中有过介绍，本文就不再讲解基础知识，而主要结合项目场景来讲一讲。")])])}),[],!1,null,null,null);e.default=_.exports}}]);